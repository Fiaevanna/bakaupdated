---
import Button from "../components/Button.astro";
import "@fontsource-variable/rokkitt";
interface Image {
  imageUrl: string;
  isActive: boolean;
}


interface Size {
  id: number;
  value: string;
} 
interface Props {
  images: Image[];
  title: string;
  price: string;
  sizes: Size[];
  originalPrice?: string | null;
  discountPercantage?: string | null;
  id: number;
}

const { images, title, sizes, price, originalPrice, discountPercantage, id } =
  Astro.props;

const largeImage = images.find((image) => image.isActive === true);
---

<script>
  const previewImages = document.querySelectorAll<HTMLImageElement>(".product__preview-image");

  previewImages.forEach((preview) => {
    const handleChangeImage = () => {
      const productId = preview.dataset.productId;
      const largeImage = document.querySelector<HTMLImageElement>(`#largeImage-${productId}`)!;
      const clickedSrc = preview.getAttribute("src")!;
      largeImage.src = clickedSrc;
    };
    preview.addEventListener("mouseover", handleChangeImage);
    preview.addEventListener("click", handleChangeImage);
  });
</script>

<div class="product">
  <div class="product__images">
    <div class="product__large-image-parent">
      <img
        src={largeImage?.imageUrl}
        class="product__large-image"
        alt={title}
        id={`largeImage-${id}`}
      />
    </div>

    <div class="product__preview-images-parent">
      {
        images.map((image) => (
          <img
            src={image.imageUrl}
            class={`product__preview-image`}
            alt={title}
            data-product-id={id}
          />
        ))
      }
    </div>
  </div>

  <div class="product__info-parent">
    <div class="product__info-price-wrapper">
      <h3 class="product__title">{title}</h3>

      <h4
        class:list={[
          "product__price",
          { "product__price-discount": discountPercantage },
        ]}
      >
        {price}
      </h4>
      <div class="product__info-correction-parent">
        {
          originalPrice && (
            <>
              <span>Original Price: </span>
              <span class="product__original-price">{originalPrice}</span>
            </>
          )
        }

        {
          discountPercantage && (
            <span class="product__discount-percentage">
              {discountPercantage}
            </span>
          )
        }
      </div>
    </div>
    <div class="product__info-actions">
      <select class="product__size-select" name="size" id="size">
        <option class="product__info-hidden">Select size</option>
        {sizes.map((size) => <option value={size.value}>{size.value}</option>)}
      </select>
      <Button class="product__info-button">Add to cart</Button>
    </div>
  </div>
</div>

<style lang="scss">
  @import "../styles/_variables.scss";

  .product {
    &__large-image {
      width: 100%;
    }

    &__title {
      font-family: "Rokkitt Variable", serif;
      font-weight: bold;
      font-size: 20px;
      margin: 0;
      color: #333333;
      text-decoration: underline;
      text-decoration-color: lightgray;
    }
    &__preview-images-parent {
      display: flex;
      overflow-x: scroll;
      gap: 10px;
    }
    &__images {
      margin-bottom: 20px;
    }
    &__preview-image {
      width: 30%;
      margin-top: 10px;

      &:hover {
        opacity: 80%;
        cursor: pointer;
      }
    }

    &__info-parent {
      display: flex;
      flex-direction: column;
      padding: 0 10px;
      font-size: 17px;
      gap: 20px;
    }

    &__info-price-wrapper {
      display: flex;
      flex-direction: column;
      gap: 5px;
      height: 70px;
    }
    &__info-actions {
      display: flex;
      flex-direction: column;
      gap: 10px;
    }
    &__size-select {
      width: 100%;
      border: 1px solid lightgray;
      border-radius: 4px;
      font-family: "Rokkitt Variable", serif;
      font-weight: 300;
      font-size: 19px;
      color: #333333;
      padding: 5px;
    }
    &__info-hidden {
      display: none;
    }
    &__info-correction-parent {
      font-family: "Rokkitt Variable", serif;
      font-weight: 300;
    }
    &__price {
      color: black;
      margin: 0;
      font-family: "Rokkitt Variable", serif;
      font-weight: bold;
    }
    &__price-discount {
      color: #ff0c0c;
    }
    &__original-price {
      text-decoration: line-through;
      text-decoration-color: gray;
    }
    &__discount-percentage {
      color: #ff0c0c;
      font-family: "Rokkitt Variable", serif;
      font-weight: bold;
    }
    &__info-button {
      width: 100%;
      height: 40px;
      padding: 5px;
      background-color: #a39e7a;
      opacity: 10;
      font-family: "Share Tech Mono", monospace;
      font-size: 16px;
      font-weight: 300px;
      border: 1px solid #333333;
      border-radius: 10px;
      margin-bottom: 40px;
    }
  }

  // Responsiv anpassning

  @media (min-width: $medium-breakpoint) {
    .product {
      width: 50%;
      padding: 10px;
      box-sizing: border-box;

      &__preview-images-parent {
        display: flex;
        gap: 10px;
        overflow-x: unset;
      }

      &__preview-image {
        width: 50px;
        margin-top: 10px;
      }

      &__info-parent {
        padding: unset;
      }
    }
  }

  @media (min-width: $mediumlarge-breakpoint) {
    .product {
      box-sizing: border-box;
      padding: unset;
      flex-basis: calc(50% - 10px);
      &__info-parent {
        padding: unset;
      }
    }
  }

  @media (min-width: $xlarge-breakpoint) {
    .product {
      box-sizing: border-box;
      padding: unset;
      flex-basis: calc(100% / 3 - 20px / 3);
      &__info-parent {
        padding: unset;
      }
    }
  }
</style>
